// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/classroom/batch": {
            "get": {
                "description": "Fetches a batch of 20 vocab entries from the user's learning pool",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pool"
                ],
                "summary": "Get a new batch of words from the pool",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Batch"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Removes one or more vocab items from the userâ€™s current pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pool"
                ],
                "summary": "Remove vocab from the learning pool",
                "parameters": [
                    {
                        "description": "Vocab items to remove",
                        "name": "vocab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.BatchResult"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classroom/sets": {
            "get": {
                "description": "Fetches all vocab sets for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "Get list of vocab sets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.VocabSet"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new vocab set for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "Add a new vocab set",
                "parameters": [
                    {
                        "description": "Set information",
                        "name": "set",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.AddSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VocabSet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classroom/sets/{setId}": {
            "put": {
                "description": "Updates an existing vocab set for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "Update a vocab set",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set ID",
                        "name": "setId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated set information",
                        "name": "set",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UpdateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Set not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/classroom/sets/{setId}/batch": {
            "get": {
                "description": "Fetches a batch of vocabulary items from a specific vocab set",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "Get vocab batch from a specific set",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set ID",
                        "name": "setId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of items (default: all)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Batch"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Set not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vocab": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vocab"
                ],
                "summary": "Get all vocab for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Vocab"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vocab"
                ],
                "summary": "Update vocab",
                "parameters": [
                    {
                        "description": "Vocabulary",
                        "name": "vocab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Vocab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Vocab"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vocab"
                ],
                "summary": "Add vocab",
                "parameters": [
                    {
                        "description": "Vocabulary",
                        "name": "vocab",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Vocab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Vocab"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vocab/{id}": {
            "delete": {
                "tags": [
                    "vocab"
                ],
                "summary": "Remove vocab",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vocab ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Batch": {
            "type": "object",
            "properties": {
                "vocabs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vocab"
                    }
                }
            }
        },
        "model.PartOfSpeech": {
            "type": "string",
            "enum": [
                "unknown",
                "noun",
                "verb",
                "numeral",
                "adjective",
                "adverb",
                "pronoun",
                "preposition",
                "conjunction",
                "question"
            ],
            "x-enum-varnames": [
                "PartOfSpeechUnknown",
                "PartOfSpeechNoun",
                "PartOfSpeechVerb",
                "PortOfSpeechNumeral",
                "PartOfSpeechAdjective",
                "PartOfSpeechAdverb",
                "PartOfSpeechPronoun",
                "PartOfSpeechPreposition",
                "PartOfSpeechConjunction",
                "PartOfSpeechQuestion"
            ]
        },
        "model.Vocab": {
            "type": "object",
            "properties": {
                "definition": {
                    "type": "string"
                },
                "forms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VocabForm"
                    }
                },
                "id": {
                    "type": "string"
                },
                "part_of_speech": {
                    "$ref": "#/definitions/model.PartOfSpeech"
                },
                "pause_until": {
                    "type": "string"
                }
            }
        },
        "model.VocabForm": {
            "type": "object",
            "properties": {
                "form": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_success": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "success_in_row": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.VocabSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "vocab_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server.AddSetRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "vocab_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server.BatchResult": {
            "type": "object",
            "properties": {
                "with_mistake": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vocab"
                    }
                },
                "without_mistake": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Vocab"
                    }
                }
            }
        },
        "server.UpdateSetRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "vocab_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
